{"version":3,"file":"static/js/959.de916ab8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Btn\":\"MovieInfo_Btn__TVE44\",\"Wrapper\":\"MovieInfo_Wrapper__40G5+\",\"Box\":\"MovieInfo_Box__PRd6m\",\"Title\":\"MovieInfo_Title__TexLD\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieInfo.module.css';\n\nexport const MovieInfo = ({ movieInfo }) => {\n  const location = useLocation();\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieInfo;\n\n  return (\n    <>\n      <Link className={css.Btn} to={location.state?.from ?? '/'}>\n        Go back\n      </Link>\n      <div className={css.Wrapper}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width=\"200\"\n        />\n        <div className={css.Box}>\n          <span className={css.Title}>{title}</span>\n          <span>({release_date.slice(0, 4)})</span>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <p>Overview</p>\n          <p>{overview}</p>\n          <p>Genres</p>\n          <p>\n            {genres.map(genre => (\n              <span key={genre.id}>{genre.name}</span>\n            ))}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movieInfo: PropTypes.object,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/moviesAPI';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieInfo(movieId).then(setMovieInfo);\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && <MovieInfo movieInfo={movieInfo} />}\n      <ul style={{ listStyle: 'none' }}>\n        <li>\n          <Link\n            style={{ textDecoration: 'none', color: 'black' }}\n            to=\"cast\"\n            state={location.state ?? '/'}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            style={{ textDecoration: 'none', color: 'black' }}\n            to=\"reviews\"\n            state={location.state ?? '/'}\n          >\n            Reviwers\n          </Link>\n        </li>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </ul>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '3b8f6a8ecb92c393de5009c015f6a411';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovies() {\n  const response = await axios('trending/movie/day', {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n\nexport async function getMovieInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return response.data.cast;\n}\n\nexport async function getReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data.results;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios('/search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data.results;\n}\n"],"names":["MovieInfo","movieInfo","location","useLocation","poster_path","title","release_date","vote_average","overview","genres","className","css","to","state","from","src","alt","width","slice","Math","round","map","genre","name","id","useState","setMovieInfo","movieId","useParams","useEffect","getMovieInfo","then","style","listStyle","textDecoration","color","Suspense","fallback","KEY","getPopularMovies","axios","params","api_key","response","data","results","getCast","cast","getReviews","getSearchMovies","query"],"sourceRoot":""}