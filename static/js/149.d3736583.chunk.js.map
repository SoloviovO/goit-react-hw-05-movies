{"version":3,"file":"static/js/149.d3736583.chunk.js","mappings":"oMAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAGG,YAAcC,MAAO,CAAEC,KAAMR,GAArD,SACGI,KAFID,EAMZ,KAGN,C,kGChBYM,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,+BACE,kBAAMH,SARV,SAAsBI,GACpBA,EAAMC,iBACNL,EAASE,GACTC,EAAS,GACV,EAIG,WACE,kBAAOG,KAAK,OAAOC,KAAK,QAAQC,MAAON,EAAOO,SAbpD,SAAsBL,GACpBD,EAASC,EAAMM,OAAOF,MACvB,KAYK,mBAAQF,KAAK,SAAb,wBAIP,E,0BCOD,EAzBe,WACb,OAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOZ,EAAP,KAAesB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,SAchC,OARAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAgBH,GAAQI,KAAKR,EAIhC,GAAE,CAACI,KAGF,iCACE,SAAChB,EAAD,CAAYC,SAdhB,SAA0BE,GACxBY,EAAgB,CAAEZ,MAAAA,GACnB,IAaIb,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,C,+LC3BK+B,EAAM,mCAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BnC,GAA5B,wFACkB6B,EAAAA,EAAAA,GAAM,UAAD,OAAW7B,GAAM,CAC3C8B,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAuBpC,GAAvB,wFACkB6B,EAAAA,EAAAA,GAAM,UAAD,OAAW7B,EAAX,YAAyB,CACnD8B,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKI,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BtC,GAA1B,wFACkB6B,EAAAA,EAAAA,GAAM,UAAD,OAAW7B,EAAX,YAAyB,CACnD8B,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhB,GAA/B,wFACkBoB,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CC,OAAQ,CAAEC,QAASJ,EAAKlB,MAAAA,KAFrB,cACCuB,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEA/BPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/MoviesList/MoviesLIst.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesLIst = ({ movies }) => {\n  const location = useLocation();\n  // console.log(movies);\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id.toString()}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesLIst.propTypes = {\n  movies: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  function handleChange(event) {\n    setQuery(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/moviesAPI';\nimport { MoviesLIst } from 'components/MoviesList/MoviesLIst';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get('query');\n\n  function handleFormSubmit(query) {\n    setSearchParams({ query });\n  }\n\n  useEffect(() => {\n    function fetchMovies() {\n      getSearchMovies(filter).then(setMovies);\n    }\n\n    fetchMovies(filter);\n  }, [filter]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleFormSubmit} />\n      {movies && <MoviesLIst movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '3b8f6a8ecb92c393de5009c015f6a411';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovies() {\n  const response = await axios('trending/movie/day', {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n\nexport async function getMovieInfo(id) {\n  const response = await axios(`/movie/${id}`, {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios(`/movie/${id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return response.data.cast;\n}\n\nexport async function getReviews(id) {\n  const response = await axios(`/movie/${id}/reviews`, {\n    params: { api_key: KEY },\n  });\n\n  return response.data.results;\n}\n\nexport async function getSearchMovies(query) {\n  const response = await axios('/search/movie', {\n    params: { api_key: KEY, query },\n  });\n  return response.data.results;\n}\n"],"names":["MoviesLIst","movies","location","useLocation","map","id","title","to","toString","state","from","SearchForm","onSubmit","useState","query","setQuery","event","preventDefault","type","name","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","filter","get","useEffect","getSearchMovies","then","KEY","getPopularMovies","axios","params","api_key","response","data","results","getMovieInfo","getCast","cast","getReviews"],"sourceRoot":""}